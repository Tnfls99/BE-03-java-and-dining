name: springboot-gradle-docker-ec2-cd

on:
  pull_request:
    branches: [ release ]
    types: [ closed ]

jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # JDK version 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # application.yml 설정
      - name: Set application.yml for app
        env:
          APPLICATION_YML: "${{ secrets.APPLICATION_YML }}"
          YML_DIR: src/main/resources
          YML_DIR_FILE_NAME: application.yml
        run: |
          echo $APPLICATION_YML | base64 --decode > src/main/resources/application.yml

      # Gradle build
      - name: Build with Gradle
        run: ./gradlew bootJar

      # Spring 어플리케이션 Docker Image 빌드 & 도커 허브로 도커이미지 푸시
      - name: Build Docker Image For Spring
        run: |
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/java-and-dining .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/java-and-dining 

      # 서버에서 Docker 이미지 실행
      - name: EC2 Docker Run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.AWS_EC2_KEY }}
          script: |
            docker stop java-and-dining
            docker rm java-and-dining
            docker rmi ${{ secrets.DOCKER_HUB_USERNAME }}/java-and-dining
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/java-and-dining
            docker-compose up -d